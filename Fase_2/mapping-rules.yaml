# COBOL to Java Migration Configuration
# Author: Annalisa Egidi
# Version: 1.0

# Target Java package
package: com.miriade.cobol.migrated

# Output directory for generated files
output_dir: output/java

# Java version target
java_version: 11

# Database configuration
database:
  type: postgresql
  driver: org.postgresql.Driver
  connection_pool: hikari
  
# Code generation options
generation:
  # Generate JPA entities from SQL tables
  generate_entities: true
  
  # Generate DAO classes
  generate_dao: true
  
  # Generate service layer
  generate_services: true
  
  # Use Spring Boot framework
  use_spring: true
  
  # Generate unit tests
  generate_tests: true
  
  # Code style
  indent_size: 4
  max_line_length: 120

# Type mapping rules
type_mappings:
  # COBOL Picture to Java type
  pictures:
    # Numeric types
    "9{1,4}": "short"
    "9{5,9}": "int" 
    "9{10,18}": "long"
    "9+V9+": "BigDecimal"
    "S9+": "BigDecimal"
    
    # String types
    "X+": "String"
    "A+": "String"
    
    # Special types
    "9{4}-9{2}-9{2}": "LocalDate"
    "9{2}:9{2}:9{2}": "LocalTime"

# SQL transformation rules
sql_transformation:
  # Map COBOL SQL to JPA/JDBC
  cursor_handling: "result_set"  # result_set | stream | iterator
  
  # Transaction handling
  transaction_type: "spring"  # spring | jdbc | jta
  
  # Error handling
  error_handling: "exception"  # exception | return_code
  
  # Null handling
  null_handling: "optional"  # optional | nullable | default

# COBOL construct mappings
construct_mappings:
  # Control structures
  PERFORM:
    type: "method_call"
    async: false
    
  EVALUATE:
    type: "switch"
    use_enhanced: true
    
  # File operations
  file_operations:
    READ: "BufferedReader"
    WRITE: "BufferedWriter"
    framework: "nio"  # io | nio
    
  # Special sections
  WORKING-STORAGE:
    scope: "class"  # class | instance
    visibility: "private"
    static: true

# Naming conventions
naming:
  # Class naming
  class:
    style: "PascalCase"
    suffix: ""
    
  # Method naming  
  method:
    style: "camelCase"
    prefix_map:
      "PERFORM": ""
      "CALCULATE": "calculate"
      "VALIDATE": "validate"
      
  # Variable naming
  variable:
    style: "camelCase"
    remove_prefixes: ["WS-", "LS-", "L-"]
    
  # Constants
  constant:
    style: "UPPER_SNAKE_CASE"
    
# Pattern replacements
patterns:
  # Replace COBOL patterns with Java idioms
  - pattern: "MOVE ZERO TO (.+)"
    replacement: "$1 = 0"
    
  - pattern: "MOVE SPACES TO (.+)"
    replacement: "$1 = \"\""
    
  - pattern: "ADD (.+) TO (.+)"
    replacement: "$2 += $1"
    
  - pattern: "SUBTRACT (.+) FROM (.+)"
    replacement: "$2 -= $1"

# Optimization options
optimizations:
  # Remove redundant code
  remove_redundant: true
  
  # Inline simple performs
  inline_simple_methods: true
  
  # Use Java 8+ features
  use_streams: true
  use_optional: true
  use_lambda: true
  
# Logging configuration
logging:
  # Add logging statements
  add_logging: true
  framework: "slf4j"  # slf4j | log4j | jul
  
  # Log levels for different operations
  levels:
    sql: "DEBUG"
    business_logic: "INFO"
    errors: "ERROR"

# Documentation
documentation:
  # Generate JavaDoc
  generate_javadoc: true
  
  # Include COBOL source as comment
  include_cobol_source: true
  
  # Add migration notes
  add_migration_notes: true

# Validation rules
validation:
  # Validate numeric ranges
  validate_numeric_ranges: true
  
  # Add null checks
  add_null_checks: true
  
  # Validate business rules
  preserve_business_rules: true

# Framework-specific options
frameworks:
  spring:
    version: "2.7.5"
    use_boot: true
    use_data_jpa: true
    use_validation: true
    
  hibernate:
    version: "5.6.12"
    dialect: "org.hibernate.dialect.PostgreSQLDialect"
    
# Testing configuration
testing:
  framework: "junit5"  # junit5 | testng
  coverage_threshold: 80
  generate_mocks: true
  
# Migration metadata
metadata:
  # Add migration timestamp
  add_timestamp: true
  
  # Add source file reference
  add_source_reference: true
  
  # Track migration version
  version: "1.0.0"