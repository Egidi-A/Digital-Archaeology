-- File: query_valutazioni.sql
-- Descrizione: Query per la gestione delle valutazioni

-- Query per inserire una nuova valutazione
INSERT INTO VALUTAZIONI (
    ID_DIPENDENTE, ID_CICLO, ID_VALUTATORE, DATA_VALUTAZIONE,
    STATO, PUNTEGGIO_TOTALE, COMMENTI_VALUTATORE, DATA_CREAZIONE
) VALUES (
    :HV-ID-DIPENDENTE, :HV-ID-CICLO, :HV-ID-VALUTATORE, :HV-DATA-VALUTAZIONE,
    'BOZZA', :HV-PUNTEGGIO-TOTALE, :HV-COMMENTI-VALUTATORE, CURRENT TIMESTAMP
);

-- Query per inserire un dettaglio valutazione
INSERT INTO DETTAGLI_VALUTAZIONE (
    ID_VALUTAZIONE, ID_CATEGORIA, PUNTEGGIO, PESO, COMMENTI
) VALUES (
    :HV-ID-VALUTAZIONE, :HV-ID-CATEGORIA, :HV-PUNTEGGIO, :HV-PESO, :HV-COMMENTI
);

-- Query per aggiornare una valutazione
UPDATE VALUTAZIONI
SET PUNTEGGIO_TOTALE = :HV-PUNTEGGIO-TOTALE,
    COMMENTI_VALUTATORE = :HV-COMMENTI-VALUTATORE,
    STATO = :HV-STATO,
    DATA_MODIFICA = CURRENT TIMESTAMP
WHERE ID_VALUTAZIONE = :HV-ID-VALUTAZIONE;

-- Query per aggiornare un dettaglio valutazione
UPDATE DETTAGLI_VALUTAZIONE
SET PUNTEGGIO = :HV-PUNTEGGIO,
    PESO = :HV-PESO,
    COMMENTI = :HV-COMMENTI
WHERE ID_DETTAGLIO = :HV-ID-DETTAGLIO;

-- Query per completare una valutazione
UPDATE VALUTAZIONI
SET STATO = 'COMPLETATA',
    DATA_MODIFICA = CURRENT TIMESTAMP
WHERE ID_VALUTAZIONE = :HV-ID-VALUTAZIONE;

-- Query per ottenere i dettagli di una valutazione
SELECT 
    V.ID_VALUTAZIONE,
    V.DATA_VALUTAZIONE,
    V.STATO,
    V.PUNTEGGIO_TOTALE,
    V.COMMENTI_VALUTATORE,
    V.COMMENTI_DIPENDENTE,
    V.DATA_COLLOQUIO,
    DV.NOME AS NOME_VALUTATORE,
    CV.NOME_CICLO,
    CV.ANNO
FROM VALUTAZIONI V
JOIN DIPENDENTI DV ON V.ID_VALUTATORE = DV.ID_DIPENDENTE
JOIN CICLI_VALUTAZIONE CV ON V.ID_CICLO = CV.ID_CICLO
WHERE V.ID_VALUTAZIONE = :HV-ID-VALUTAZIONE;

-- Query per ottenere i dettagli delle categorie di una valutazione
SELECT 
    DV.ID_DETTAGLIO,
    CAT.NOME_CATEGORIA,
    DV.PUNTEGGIO,
    DV.PESO,
    DV.COMMENTI,
    DV.PUNTEGGIO * DV.PESO AS PUNTEGGIO_PESATO
FROM DETTAGLI_VALUTAZIONE DV
JOIN CATEGORIE_VALUTAZIONE CAT ON DV.ID_CATEGORIA = CAT.ID_CATEGORIA
WHERE DV.ID_VALUTAZIONE = :HV-ID-VALUTAZIONE
ORDER BY CAT.NOME_CATEGORIA;

-- Query per ottenere le valutazioni di un dipendente
SELECT 
    V.ID_VALUTAZIONE,
    CV.ANNO,
    CV.NOME_CICLO,
    V.DATA_VALUTAZIONE,
    V.STATO,
    V.PUNTEGGIO_TOTALE,
    DV.NOME AS NOME_VALUTATORE
FROM VALUTAZIONI V
JOIN CICLI_VALUTAZIONE CV ON V.ID_CICLO = CV.ID_CICLO
JOIN DIPENDENTI DV ON V.ID_VALUTATORE = DV.ID_DIPENDENTE
WHERE V.ID_DIPENDENTE = :HV-ID-DIPENDENTE
ORDER BY CV.ANNO DESC, CV.NOME_CICLO;

-- Query per le valutazioni da completare
SELECT 
    V.ID_VALUTAZIONE,
    D.NOME AS NOME_DIPENDENTE,
    P.NOME_POSIZIONE,
    DP.NOME_DIPARTIMENTO,
    CV.ANNO,
    CV.NOME_CICLO,
    V.STATO,
    V.DATA_CREAZIONE
FROM VALUTAZIONI V
JOIN DIPENDENTI D ON V.ID_DIPENDENTE = D.ID_DIPENDENTE
JOIN POSIZIONI P ON D.ID_POSIZIONE = P.ID_POSIZIONE
JOIN DIPARTIMENTI DP ON P.ID_DIPARTIMENTO = DP.ID_DIPARTIMENTO
JOIN CICLI_VALUTAZIONE CV ON V.ID_CICLO = CV.ID_CICLO
WHERE V.ID_VALUTATORE = :HV-ID-VALUTATORE
AND V.STATO = 'BOZZA'
ORDER BY V.DATA_CREAZIONE;

-- Query per confronto valutazioni nel tempo
SELECT 
    CV.ANNO,
    CV.NOME_CICLO,
    V.PUNTEGGIO_TOTALE,
    (SELECT AVG(V2.PUNTEGGIO_TOTALE) 
     FROM VALUTAZIONI V2
     JOIN DIPENDENTI D2 ON V2.ID_DIPENDENTE = D2.ID_DIPENDENTE
     JOIN POSIZIONI P2 ON D2.ID_POSIZIONE = P2.ID_POSIZIONE
     WHERE V2.ID_CICLO = V.ID_CICLO
     AND P2.ID_DIPARTIMENTO = :HV-ID-DIPARTIMENTO) AS MEDIA_DIPARTIMENTO
FROM VALUTAZIONI V
JOIN CICLI_VALUTAZIONE CV ON V.ID_CICLO = CV.ID_CICLO
WHERE V.ID_DIPENDENTE = :HV-ID-DIPENDENTE
ORDER BY CV.ANNO, CV.NOME_CICLO;

-- Query per distribuzione punteggi per dipartimento
SELECT 
    DP.NOME_DIPARTIMENTO,
    COUNT(V.ID_VALUTAZIONE) AS NUMERO_VALUTAZIONI,
    AVG(V.PUNTEGGIO_TOTALE) AS PUNTEGGIO_MEDIO,
    MIN(V.PUNTEGGIO_TOTALE) AS PUNTEGGIO_MINIMO,
    MAX(V.PUNTEGGIO_TOTALE) AS PUNTEGGIO_MASSIMO,
    STDDEV(V.PUNTEGGIO_TOTALE) AS DEVIAZIONE_STANDARD
FROM VALUTAZIONI V
JOIN DIPENDENTI D ON V.ID_DIPENDENTE = D.ID_DIPENDENTE
JOIN POSIZIONI P ON D.ID_POSIZIONE = P.ID_POSIZIONE
JOIN DIPARTIMENTI DP ON P.ID_DIPARTIMENTO = DP.ID_DIPARTIMENTO
JOIN CICLI_VALUTAZIONE CV ON V.ID_CICLO = CV.ID_CICLO
WHERE CV.ANNO = :HV-ANNO
AND CV.NOME_CICLO = :HV-NOME-CICLO
AND V.STATO = 'COMPLETATA'
GROUP BY DP.NOME_DIPARTIMENTO
ORDER BY PUNTEGGIO_MEDIO DESC;