       IDENTIFICATION DIVISION.
       PROGRAM-ID. ESEMPIO01.
       AUTHOR. Annalisa.
      
       ENVIRONMENT DIVISION.
       
       DATA DIVISION.
       WORKING-STORAGE SECTION.
      *****************************************************
      *            WORKING STORAGE SECTION                *
      *****************************************************
       01 WS-CURSOR-NAME                 PIC X(30).
       01 COSTANTI.
          03 LT-THIS-PROGRAM             PIC X(8) VALUE 'ESEMPIO01'.
       01 HA-DIPENDENTI-RESULT.
          05 HA-ID-DIPENDENTE            PIC S9(5) COMP-3.
          05 HA-NOME                     PIC X(30).
          05 HA-ID-POSIZIONE             PIC S9(4) COMP-3.
          05 HA-DATA-ASSUNZIONE          PIC X(10).
      
      *****************************************************
      *        SQL COMMUNICATIONS AREA                    *
      *****************************************************
       EXEC SQL INCLUDE SQLCA            END-EXEC.
       
      *****************************************************
      *               COPY STANDARD                       *
      *****************************************************
       EXEC SQL INCLUDE UT61IF           END-EXEC.
      
      *****************************************************
      *      AREA DELLE CONDIZIONI DI WHERE CONDITION     *
      *****************************************************
       01 COMODI-SQL.
          05 WS-VOLTE-FETCH              PIC S9(9) VALUE ZERO COMP-3.
          05 WS-RIGHE-RIMASTE            PIC S9(9) VALUE ZERO COMP-3.
          05 I                           PIC S9(04) COMP.
       
       01 WS-AREA-WHERE-CONDITION        PIC X(300).
       01 WS-AREA-WHERE-CONDITION-R REDEFINES WS-AREA-WHERE-CONDITION.
          05 WS-NOME-DIPENDENTE          PIC X(30).
          05 WS-DATA-ASSUNZIONE          PIC X(10).
          05 FILLER                      PIC X(260).
      
       EXEC SQL BEGIN DECLARE SECTION     END-EXEC.
       
       01 VARIABILI-APPO.
          05 HV-ROWS-FETCHED             PIC S9(4) COMP.
      
       EXEC SQL END DECLARE SECTION       END-EXEC.
      
      *****************************************************
      *              PROCEDURE DIVISION                   *
      *****************************************************
       PROCEDURE DIVISION.
       
       A0000-MAIN SECTION.
           PERFORM A0100-INIT
           PERFORM A0200-PROCESS
           PERFORM A0300-TERM
           GOBACK.
           
       A0000-MAIN-EXIT.
           EXIT.

       A0100-INIT SECTION.
           DISPLAY "INIZIO PROGRAMMA ESEMPIO01"
           MOVE ZERO TO WS-VOLTE-FETCH
           MOVE 0 TO HV-ROWS-FETCHED
           
           EXEC SQL
               WHENEVER SQLERROR GOTO A9000-SQL-ERROR
           END-EXEC.
           
       A0100-INIT-EXIT.
           EXIT.

       A0200-PROCESS SECTION.
           DISPLAY "PROCESSO PRINCIPALE - QUERY DIPENDENTI"
           PERFORM B0100-QUERY-DIPENDENTI
           
       A0200-PROCESS-EXIT.
           EXIT.
           
       A0300-TERM SECTION.
           DISPLAY "FINE PROGRAMMA ESEMPIO01"
           
       A0300-TERM-EXIT.
           EXIT.
           
       B0100-QUERY-DIPENDENTI SECTION.
           DISPLAY "LETTURA DIPENDENTI"
           
           PERFORM B0110-OPEN-CURSOR-DIP
           PERFORM B0120-FETCH-DIP-ROW UNTIL WS-VOLTE-FETCH = 0
           PERFORM B0130-CLOSE-CURSOR-DIP
           
       B0100-QUERY-DIPENDENTI-EXIT.
           EXIT.

       B0110-OPEN-CURSOR-DIP SECTION.
           EXEC SQL
               DECLARE CUR_DIP CURSOR FOR
               SELECT ID_DIPENDENTE, NOME, ID_POSIZIONE, DATA_ASSUNZIONE
               FROM DIPENDENTI
               ORDER BY NOME
           END-EXEC
           
           EXEC SQL
               OPEN CUR_DIP
           END-EXEC
           
           MOVE 1 TO WS-VOLTE-FETCH
           
       B0110-OPEN-CURSOR-DIP-EXIT.
           EXIT.
           
       B0120-FETCH-DIP-ROW SECTION.
           EXEC SQL
               FETCH CUR_DIP
               INTO :HA-DIPENDENTI-RESULT.HA-ID-DIPENDENTE,
                    :HA-DIPENDENTI-RESULT.HA-NOME,
                    :HA-DIPENDENTI-RESULT.HA-ID-POSIZIONE,
                    :HA-DIPENDENTI-RESULT.HA-DATA-ASSUNZIONE
           END-EXEC
           
           IF SQLCODE = 100
               MOVE 0 TO WS-VOLTE-FETCH
           ELSE
               DISPLAY "ID: " HA-DIPENDENTI-RESULT.HA-ID-DIPENDENTE 
                      " - NOME: " HA-DIPENDENTI-RESULT.HA-NOME
                      " - POSIZIONE: " HA-DIPENDENTI-RESULT.HA-ID-POSIZIONE
                      " - ASSUNZIONE: " HA-DIPENDENTI-RESULT.HA-DATA-ASSUNZIONE
               ADD 1 TO WS-VOLTE-FETCH
           END-IF
           
       B0120-FETCH-DIP-ROW-EXIT.
           EXIT.
       
       B0130-CLOSE-CURSOR-DIP SECTION.
           EXEC SQL
               CLOSE CUR_DIP
           END-EXEC
           
       B0130-CLOSE-CURSOR-DIP-EXIT.
           EXIT.

       A9000-SQL-ERROR SECTION.
           DISPLAY "ERRORE SQL"
           DISPLAY "SQLCODE: " SQLCODE
           DISPLAY "SQLERRM: " SQLERRM
           
           DISPLAY "ERRORE NEL PROGRAMMA " LT-THIS-PROGRAM
                   " CON CODICE " SQLCODE
                   
           EXEC SQL
               WHENEVER SQLERROR CONTINUE
           END-EXEC
           
           EXEC SQL
               ROLLBACK
           END-EXEC
           
           MOVE -1 TO RETURN-CODE
           GOBACK.
           
       A9000-SQL-ERROR-EXIT.
           EXIT.