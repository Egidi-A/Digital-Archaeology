       IDENTIFICATION DIVISION.
       PROGRAM-ID. DB2-IMPORT.
       
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT INPUT-FILE ASSIGN TO 'dipendentiImport.dat'
           ORGANIZATION IS LINE SEQUENTIAL.
       
       DATA DIVISION.
       FILE SECTION.
       FD INPUT-FILE.
       01 EMPLOYEE-INPUT-RECORD.
          05 EMP-ID-IN       PIC 9(5).
          05 EMP-NAME-IN     PIC X(30).
          05 EMP-POSITION-IN PIC X(20).
       
       WORKING-STORAGE SECTION.
       EXEC SQL BEGIN DECLARE SECTION END-EXEC.
       01 DBNAME             PIC X(8) VALUE "DIPDB".
       01 USERNAME           PIC X(20) VALUE "db2inst1".
       01 PASSWD             PIC X(20) VALUE "password".
       
       01 ID-DIPENDENTE      PIC 9(5).
       01 NOME-DIPENDENTE    PIC X(30).
       01 NOME-POSIZIONE     PIC X(20).
       01 ID-POSIZIONE       PIC 9(5).
       01 SQLCODE-DISPLAY    PIC S9(9) SIGN LEADING SEPARATE.
       EXEC SQL END DECLARE SECTION END-EXEC.
       
       EXEC SQL INCLUDE SQLCA END-EXEC.
       
       01 WS-EOF             PIC A(1) VALUE 'N'.
       01 WS-COUNTER         PIC 9(3) VALUE 0.
       01 WS-DATE            PIC X(10) VALUE "2025-05-13".
       
       PROCEDURE DIVISION.
       MAIN-PARAGRAPH.
           DISPLAY "Inizio importazione in DB2".
           
           PERFORM DB-CONNECT.
           
           IF SQLCODE = 0
               OPEN INPUT INPUT-FILE
               
               PERFORM UNTIL WS-EOF = 'Y'
                   READ INPUT-FILE
                       AT END
                           MOVE 'Y' TO WS-EOF
                       NOT AT END
                           ADD 1 TO WS-COUNTER
                           
                           MOVE EMP-ID-IN TO ID-DIPENDENTE
                           MOVE EMP-NAME-IN TO NOME-DIPENDENTE
                           MOVE EMP-POSITION-IN TO NOME-POSIZIONE
                           
                           PERFORM GET-POSITION-ID
                           
                           IF SQLCODE = 0
                               PERFORM INSERT-EMPLOYEE
                               
                               IF SQLCODE = 0
                                   DISPLAY "Dipendente inserito: " 
                                           NOME-DIPENDENTE
                               ELSE
                                   MOVE SQLCODE TO SQLCODE-DISPLAY
                                   DISPLAY "Errore inserimento" 
                                   DISPLAY "dipendente: " 
                                           SQLCODE-DISPLAY
                                   DISPLAY SQLERRMC
                               END-IF
                           ELSE
                               MOVE SQLCODE TO SQLCODE-DISPLAY
                               DISPLAY "Posizione non trovata: " 
                                       NOME-POSIZIONE
                                       ", SQLCODE: " SQLCODE-DISPLAY
                           END-IF
                   END-READ
               END-PERFORM
               
               CLOSE INPUT-FILE
               
               DISPLAY "Importazione completata."
               DISPLAY "Record importati: " WS-COUNTER
           END-IF.
           
           PERFORM DB-DISCONNECT.
           STOP RUN.
       
       DB-CONNECT.
           EXEC SQL
               CONNECT TO :DBNAME USER :USERNAME USING :PASSWD
           END-EXEC.
           
           IF SQLCODE NOT = 0
               MOVE SQLCODE TO SQLCODE-DISPLAY
               DISPLAY "Errore connessione DB2: " SQLCODE-DISPLAY
               DISPLAY SQLERRMC
           ELSE
               DISPLAY "Connessione a DB2 eseguita con successo"
           END-IF.
       
       DB-DISCONNECT.
           EXEC SQL
               CONNECT RESET
           END-EXEC.
           
           IF SQLCODE NOT = 0
               MOVE SQLCODE TO SQLCODE-DISPLAY
               DISPLAY "Errore disconnessione: " SQLCODE-DISPLAY
           ELSE
               DISPLAY "Disconnessione eseguita con successo"
           END-IF.
       
       GET-POSITION-ID.
           EXEC SQL
               SELECT ID_POSIZIONE INTO :ID-POSIZIONE
               FROM POSIZIONI
               WHERE NOME_POSIZIONE = :NOME-POSIZIONE
           END-EXEC.
       
       INSERT-EMPLOYEE.
           EXEC SQL
               INSERT INTO DIPENDENTI (
                   ID_DIPENDENTE,
                   NOME,
                   ID_POSIZIONE,
                   DATA_ASSUNZIONE
               ) VALUES (
                   :ID-DIPENDENTE,
                   :NOME-DIPENDENTE,
                   :ID-POSIZIONE,
                   CURRENT DATE
               )
           END-EXEC.
