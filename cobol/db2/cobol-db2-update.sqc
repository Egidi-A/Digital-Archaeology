       IDENTIFICATION DIVISION.
       PROGRAM-ID. DB2-UPDATE.
       
       ENVIRONMENT DIVISION.
       
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       EXEC SQL BEGIN DECLARE SECTION END-EXEC.
       01 DBNAME              PIC X(8) VALUE "DIPDB".
       01 USERNAME            PIC X(20) VALUE "db2inst1".
       01 PASSWD              PIC X(20) VALUE "password".
       
       01 ID-DIPENDENTE       PIC 9(5).
       01 NUOVO-ID-POSIZIONE  PIC 9(5).
       01 VECCHIA-POSIZIONE   PIC X(20).
       01 NUOVA-POSIZIONE     PIC X(20).
       01 NOME-DIPENDENTE     PIC X(30).
       01 SQLCODE-DISPLAY     PIC S9(9) SIGN LEADING SEPARATE.
       EXEC SQL END DECLARE SECTION END-EXEC.
       
       EXEC SQL INCLUDE SQLCA END-EXEC.
       
       01 WS-RISPOSTA         PIC X.
       01 WS-CONTINUE         PIC A(1) VALUE 'S'.
       
       PROCEDURE DIVISION.
      *> cobol-lint CL002 main-paragraph
           MAIN-PARAGRAPH.
           DISPLAY "Programma Aggiornamento Posizioni in DB2".
           
           PERFORM DB-CONNECT.
           
           IF SQLCODE = 0
               PERFORM UNTIL WS-CONTINUE = 'N'
                   DISPLAY "Inserisci ID Dipendente da aggiornare:"
                   ACCEPT ID-DIPENDENTE
                   
                   PERFORM GET-EMPLOYEE-INFO
                   
                   IF SQLCODE = 0
                       DISPLAY "Dipendente trovato: " NOME-DIPENDENTE
                       DISPLAY "Posizione attuale: " VECCHIA-POSIZIONE
                       
                       DISPLAY "Inserisci la nuova posizione:"
                       ACCEPT NUOVA-POSIZIONE
                       
                       PERFORM GET-POSITION-ID
                       
                       IF SQLCODE = 0
                           PERFORM UPDATE-EMPLOYEE
                           
                           IF SQLCODE = 0
                               DISPLAY "Posizione aggiornata con successo!"
                           ELSE
                               MOVE SQLCODE TO SQLCODE-DISPLAY
                               DISPLAY "Errore aggiornamento: " SQLCODE-DISPLAY
                           END-IF
                       ELSE
                           MOVE SQLCODE TO SQLCODE-DISPLAY
                           DISPLAY "Posizione non trovata: " SQLCODE-DISPLAY
                       END-IF
                   ELSE
                       IF SQLCODE = 100
                           DISPLAY "Dipendente non trovato!"
                       ELSE
                           MOVE SQLCODE TO SQLCODE-DISPLAY
                           DISPLAY "Errore ricerca: " SQLCODE-DISPLAY
                       END-IF
                   END-IF
                   
                   DISPLAY "Continuare con altro aggiornamento? (S/N)"
                   ACCEPT WS-RISPOSTA
                   MOVE FUNCTION UPPER-CASE(WS-RISPOSTA) TO WS-CONTINUE
               END-PERFORM
           END-IF.
           
           PERFORM DB-DISCONNECT.
           DISPLAY "Programma terminato."
           STOP RUN.
       
       DB-CONNECT.
           EXEC SQL
               CONNECT TO :DBNAME USER :USERNAME USING :PASSWD
           END-EXEC.
           
           IF SQLCODE NOT = 0
               MOVE SQLCODE TO SQLCODE-DISPLAY
               DISPLAY "Errore connessione DB2: " SQLCODE-DISPLAY
               DISPLAY SQLERRMC
           ELSE
               DISPLAY "Connessione a DB2 eseguita con successo"
           END-IF.
       
       DB-DISCONNECT.
           EXEC SQL
               CONNECT RESET
           END-EXEC.
           
           IF SQLCODE NOT = 0
               MOVE SQLCODE TO SQLCODE-DISPLAY
               DISPLAY "Errore disconnessione: " SQLCODE-DISPLAY
           ELSE
               DISPLAY "Disconnessione eseguita con successo"
           END-IF.
       
       GET-EMPLOYEE-INFO.
           EXEC SQL
               SELECT D.NOME, P.NOME_POSIZIONE
               INTO :NOME-DIPENDENTE, :VECCHIA-POSIZIONE
               FROM DIPENDENTI D
               JOIN POSIZIONI P ON D.ID_POSIZIONE = P.ID_POSIZIONE
               WHERE D.ID_DIPENDENTE = :ID-DIPENDENTE
           END-EXEC.
       
       GET-POSITION-ID.
           EXEC SQL
               SELECT ID_POSIZIONE 
               INTO :NUOVO-ID-POSIZIONE
               FROM POSIZIONI
               WHERE NOME_POSIZIONE = :NUOVA-POSIZIONE
           END-EXEC.
       
       UPDATE-EMPLOYEE.
           EXEC SQL
               UPDATE DIPENDENTI
               SET ID_POSIZIONE = :NUOVO-ID-POSIZIONE
               WHERE ID_DIPENDENTE = :ID-DIPENDENTE
           END-EXEC.
