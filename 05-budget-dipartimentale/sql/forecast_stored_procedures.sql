-- File: forecast_stored_procedures.sql
-- Descrizione: Stored procedure per previsioni di budget

-- Procedura per calcolare la previsione di chiusura di budget
CREATE PROCEDURE CALCOLA_PREVISIONE_CHIUSURA (
    IN P_ID_BUDGET INTEGER,
    IN P_DATA_RIFERIMENTO DATE,
    OUT P_IMPORTO_PREVISTO DECIMAL(12,2),
    OUT P_PERCENTUALE_UTILIZZO DECIMAL(5,2)
)
LANGUAGE SQL
BEGIN
    DECLARE V_IMPORTO_APPROVATO DECIMAL(12,2);
    DECLARE V_IMPORTO_UTILIZZATO DECIMAL(12,2);
    DECLARE V_DATA_INIZIO DATE;
    DECLARE V_DATA_FINE DATE;
    DECLARE V_GIORNI_TOTALI INTEGER;
    DECLARE V_GIORNI_TRASCORSI INTEGER;
    DECLARE V_BURN_RATE DECIMAL(12,2);
    
    -- Recupera informazioni sul budget
    SELECT B.IMPORTO_APPROVATO, B.IMPORTO_UTILIZZATO, P.DATA_INIZIO, P.DATA_FINE
    INTO V_IMPORTO_APPROVATO, V_IMPORTO_UTILIZZATO, V_DATA_INIZIO, V_DATA_FINE
    FROM BUDGET_DIPARTIMENTO B
    JOIN PERIODI_BUDGET P ON B.ID_PERIODO = P.ID_PERIODO
    WHERE B.ID_BUDGET = P_ID_BUDGET;
    
    -- Calcola i giorni totali e trascorsi
    SET V_GIORNI_TOTALI = DAYS(V_DATA_FINE) - DAYS(V_DATA_INIZIO) + 1;
    SET V_GIORNI_TRASCORSI = DAYS(P_DATA_RIFERIMENTO) - DAYS(V_DATA_INIZIO) + 1;
    
    -- Calcola il burn rate (spesa giornaliera media)
    IF V_GIORNI_TRASCORSI > 0 THEN
        SET V_BURN_RATE = V_IMPORTO_UTILIZZATO / V_GIORNI_TRASCORSI;
    ELSE
        SET V_BURN_RATE = 0;
    END IF;
    
    -- Calcola l'importo previsto di chiusura
    SET P_IMPORTO_PREVISTO = V_IMPORTO_UTILIZZATO + (V_BURN_RATE * (V_GIORNI_TOTALI - V_GIORNI_TRASCORSI));
    
    -- Calcola la percentuale di utilizzo prevista
    IF V_IMPORTO_APPROVATO > 0 THEN
        SET P_PERCENTUALE_UTILIZZO = (P_IMPORTO_PREVISTO / V_IMPORTO_APPROVATO) * 100;
    ELSE
        SET P_PERCENTUALE_UTILIZZO = 0;
    END IF;
END;

-- Procedura per calcolare la previsione di spesa per il mese successivo
CREATE PROCEDURE CALCOLA_PREVISIONE_MESE_SUCCESSIVO (
    IN P_ID_CENTRO_COSTO INTEGER,
    IN P_ID_CATEGORIA INTEGER,
    IN P_DATA_RIFERIMENTO DATE,
    OUT P_IMPORTO_PREVISTO DECIMAL(12,2)
)
LANGUAGE SQL
BEGIN
    DECLARE V_ANNO_CORRENTE INTEGER;
    DECLARE V_MESE_CORRENTE INTEGER;
    DECLARE V_ANNO_MESE_PRECEDENTE INTEGER;
    DECLARE V_MESE_PRECEDENTE INTEGER;
    DECLARE V_IMPORTO_MEDIO_ULTIMI_3_MESI DECIMAL(12,2);
    DECLARE V_IMPORTO_STESSO_MESE_ANNO_PRECEDENTE DECIMAL(12,2);
    
    -- Calcola anno e mese correnti
    SET V_ANNO_CORRENTE = YEAR(P_DATA_RIFERIMENTO);
    SET V_MESE_CORRENTE = MONTH(P_DATA_RIFERIMENTO);
    
    -- Calcola anno e mese precedenti
    IF V_MESE_CORRENTE = 1 THEN
        SET V_ANNO_MESE_PRECEDENTE = V_ANNO_CORRENTE - 1;
        SET V_MESE_PRECEDENTE = 12;
    ELSE
        SET V_ANNO_MESE_PRECEDENTE = V_ANNO_CORRENTE;
        SET V_MESE_PRECEDENTE = V_MESE_CORRENTE - 1;
    END IF;
    
    -- Calcola importo medio degli ultimi 3 mesi
    SELECT AVG(IMPORTO)
    INTO V_IMPORTO_MEDIO_ULTIMI_3_MESI
    FROM SPESE
    WHERE ID_CENTRO_COSTO = P_ID_CENTRO_COSTO
    AND ID_CATEGORIA = P_ID_CATEGORIA
    AND ((YEAR(DATA_SPESA) = V_ANNO_CORRENTE AND MONTH(DATA_SPESA) BETWEEN V_MESE_CORRENTE-2 AND V_MESE_CORRENTE)
         OR (YEAR(DATA_SPESA) = V_ANNO_MESE_PRECEDENTE AND MONTH(DATA_SPESA) BETWEEN 10 AND 12));
    
    -- Calcola importo dello stesso mese nell'anno precedente
    SELECT SUM(IMPORTO)
    INTO V_IMPORTO_STESSO_MESE_ANNO_PRECEDENTE
    FROM SPESE
    WHERE ID_CENTRO_COSTO = P_ID_CENTRO_COSTO
    AND ID_CATEGORIA = P_ID_CATEGORIA
    AND YEAR(DATA_SPESA) = V_ANNO_CORRENTE - 1
    AND MONTH(DATA_SPESA) = V_MESE_CORRENTE;
    
    -- Se non ci sono dati, inizializza a 0
    IF V_IMPORTO_MEDIO_ULTIMI_3_MESI IS NULL THEN
        SET V_IMPORTO_MEDIO_ULTIMI_3_MESI = 0;
    END IF;
    
    IF V_IMPORTO_STESSO_MESE_ANNO_PRECEDENTE IS NULL THEN
        SET V_IMPORTO_STESSO_MESE_ANNO_PRECEDENTE = 0;
    END IF;
    
    -- Calcola previsione (media pesata: 70% media ultimi 3 mesi, 30% stesso mese anno precedente)
    SET P_IMPORTO_PREVISTO = (V_IMPORTO_MEDIO_ULTIMI_3_MESI * 0.7) + (V_IMPORTO_STESSO_MESE_ANNO_PRECEDENTE * 0.3);
END;