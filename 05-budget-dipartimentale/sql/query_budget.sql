-- File: query_budget.sql
-- Descrizione: Query per la gestione del budget dipartimentale

-- Query per inserire un nuovo budget dipartimentale
INSERT INTO BUDGET_DIPARTIMENTO (
    ID_DIPARTIMENTO, ID_PERIODO, ID_CATEGORIA, IMPORTO_PIANIFICATO,
    STATO, DATA_CREAZIONE, NOTE
) VALUES (
    :HV-ID-DIPARTIMENTO, :HV-ID-PERIODO, :HV-ID-CATEGORIA, :HV-IMPORTO-PIANIFICATO,
    'BOZZA', CURRENT TIMESTAMP, :HV-NOTE
);

-- Query per approvare un budget
UPDATE BUDGET_DIPARTIMENTO
SET IMPORTO_APPROVATO = :HV-IMPORTO-APPROVATO,
    STATO = 'APPROVATO',
    DATA_APPROVAZIONE = CURRENT TIMESTAMP,
    ID_APPROVATORE = :HV-ID-APPROVATORE,
    NOTE = :HV-NOTE
WHERE ID_BUDGET = :HV-ID-BUDGET;

-- Query per aggiornare l'importo utilizzato di un budget
UPDATE BUDGET_DIPARTIMENTO
SET IMPORTO_UTILIZZATO = IMPORTO_UTILIZZATO + :HV-IMPORTO
WHERE ID_BUDGET = :HV-ID-BUDGET;

-- Query per inserire una revisione di budget
INSERT INTO REVISIONI_BUDGET (
    ID_BUDGET, DATA_REVISIONE, IMPORTO_PRECEDENTE, IMPORTO_NUOVO,
    MOTIVO_REVISIONE, ID_UTENTE_REVISIONE
) VALUES (
    :HV-ID-BUDGET, CURRENT TIMESTAMP, :HV-IMPORTO-PRECEDENTE, :HV-IMPORTO-NUOVO,
    :HV-MOTIVO-REVISIONE, :HV-ID-UTENTE-REVISIONE
);

-- Query per ottenere i dettagli di un budget
SELECT 
    BD.ID_BUDGET,
    D.NOME_DIPARTIMENTO,
    PB.ANNO,
    PB.NOME_PERIODO,
    CB.NOME_CATEGORIA,
    BD.IMPORTO_PIANIFICATO,
    BD.IMPORTO_APPROVATO,
    BD.IMPORTO_UTILIZZATO,
    BD.STATO,
    BD.DATA_CREAZIONE,
    BD.DATA_APPROVAZIONE,
    DA.NOME AS NOME_APPROVATORE,
    BD.NOTE
FROM BUDGET_DIPARTIMENTO BD
JOIN DIPARTIMENTI D ON BD.ID_DIPARTIMENTO = D.ID_DIPARTIMENTO
JOIN PERIODI_BUDGET PB ON BD.ID_PERIODO = PB.ID_PERIODO
JOIN CATEGORIE_BUDGET CB ON BD.ID_CATEGORIA = CB.ID_CATEGORIA
LEFT JOIN DIPENDENTI DA ON BD.ID_APPROVATORE = DA.ID_DIPENDENTE
WHERE BD.ID_BUDGET = :HV-ID-BUDGET;

-- Query per ottenere tutti i budget di un dipartimento per un periodo
SELECT 
    BD.ID_BUDGET,
    CB.NOME_CATEGORIA,
    BD.IMPORTO_PIANIFICATO,
    BD.IMPORTO_APPROVATO,
    BD.IMPORTO_UTILIZZATO,
    CASE 
        WHEN BD.IMPORTO_APPROVATO IS NULL THEN NULL
        ELSE (BD.IMPORTO_UTILIZZATO / BD.IMPORTO_APPROVATO) * 100 
    END AS PERCENTUALE_UTILIZZO,
    BD.STATO
FROM BUDGET_DIPARTIMENTO BD
JOIN CATEGORIE_BUDGET CB ON BD.ID_CATEGORIA = CB.ID_CATEGORIA
WHERE BD.ID_DIPARTIMENTO = :HV-ID-DIPARTIMENTO
AND BD.ID_PERIODO = :HV-ID-PERIODO
ORDER BY CB.NOME_CATEGORIA;

-- Query per ottenere lo storico delle revisioni di un budget
SELECT 
    RB.ID_REVISIONE,
    RB.DATA_REVISIONE,
    RB.IMPORTO_PRECEDENTE,
    RB.IMPORTO_NUOVO,
    RB.MOTIVO_REVISIONE,
    D.NOME AS NOME_UTENTE_REVISIONE
FROM REVISIONI_BUDGET RB
JOIN DIPENDENTI D ON RB.ID_UTENTE_REVISIONE = D.ID_DIPENDENTE
WHERE RB.ID_BUDGET = :HV-ID-BUDGET
ORDER BY RB.DATA_REVISIONE DESC;

-- Query per riepilogo budget per dipartimento
SELECT 
    D.NOME_DIPARTIMENTO,
    PB.ANNO,
    PB.NOME_PERIODO,
    SUM(BD.IMPORTO_PIANIFICATO) AS TOTALE_PIANIFICATO,
    SUM(BD.IMPORTO_APPROVATO) AS TOTALE_APPROVATO,
    SUM(BD.IMPORTO_UTILIZZATO) AS TOTALE_UTILIZZATO,
    CASE 
        WHEN SUM(BD.IMPORTO_APPROVATO) = 0 THEN NULL
        ELSE (SUM(BD.IMPORTO_UTILIZZATO) / SUM(BD.IMPORTO_APPROVATO)) * 100 
    END AS PERCENTUALE_UTILIZZO
FROM BUDGET_DIPARTIMENTO BD
JOIN DIPARTIMENTI D ON BD.ID_DIPARTIMENTO = D.ID_DIPARTIMENTO
JOIN PERIODI_BUDGET PB ON BD.ID_PERIODO = PB.ID_PERIODO
WHERE PB.ANNO = :HV-ANNO
GROUP BY D.NOME_DIPARTIMENTO, PB.ANNO, PB.NOME_PERIODO
ORDER BY D.NOME_DIPARTIMENTO, PB.NOME_PERIODO;

-- Query per riepilogo budget per categoria
SELECT 
    CB.NOME_CATEGORIA,
    PB.ANNO,
    PB.NOME_PERIODO,
    SUM(BD.IMPORTO_PIANIFICATO) AS TOTALE_PIANIFICATO,
    SUM(BD.IMPORTO_APPROVATO) AS TOTALE_APPROVATO,
    SUM(BD.IMPORTO_UTILIZZATO) AS TOTALE_UTILIZZATO,
    CASE 
        WHEN SUM(BD.IMPORTO_APPROVATO) = 0 THEN NULL
        ELSE (SUM(BD.IMPORTO_UTILIZZATO) / SUM(BD.IMPORTO_APPROVATO)) * 100 
    END AS PERCENTUALE_UTILIZZO
FROM BUDGET_DIPARTIMENTO BD
JOIN CATEGORIE_BUDGET CB ON BD.ID_CATEGORIA = CB.ID_CATEGORIA
JOIN PERIODI_BUDGET PB ON BD.ID_PERIODO = PB.ID_PERIODO
WHERE PB.ANNO = :HV-ANNO
GROUP BY CB.NOME_CATEGORIA, PB.ANNO, PB.NOME_PERIODO
ORDER BY CB.NOME_CATEGORIA, PB.NOME_PERIODO;

-- Query per budget vs spese effettive
SELECT 
    D.NOME_DIPARTIMENTO,
    CB.NOME_CATEGORIA,
    BD.IMPORTO_APPROVATO AS BUDGET_APPROVATO,
    COALESCE(SUM(S.IMPORTO), 0) AS SPESE_EFFETTIVE,
    BD.IMPORTO_APPROVATO - COALESCE(SUM(S.IMPORTO), 0) AS DIFFERENZA,
    CASE 
        WHEN BD.IMPORTO_APPROVATO = 0 THEN NULL
        ELSE (COALESCE(SUM(S.IMPORTO), 0) / BD.IMPORTO_APPROVATO) * 100 
    END AS PERCENTUALE_UTILIZZO
FROM BUDGET_DIPARTIMENTO BD
JOIN DIPARTIMENTI D ON BD.ID_DIPARTIMENTO = D.ID_DIPARTIMENTO
JOIN CATEGORIE_BUDGET CB ON BD.ID_CATEGORIA = CB.ID_CATEGORIA
JOIN PERIODI_BUDGET PB ON BD.ID_PERIODO = PB.ID_PERIODO
LEFT JOIN CENTRI_COSTO CC ON D.ID_DIPARTIMENTO = CC.ID_DIPARTIMENTO
LEFT JOIN SPESE S ON CC.ID_CENTRO_COSTO = S.ID_CENTRO_COSTO
                  AND S.ID_BUDGET = BD.ID_BUDGET
                  AND S.DATA_SPESA BETWEEN PB.DATA_INIZIO AND PB.DATA_FINE
WHERE BD.ID_PERIODO = :HV-ID-PERIODO
AND BD.STATO = 'APPROVATO'
GROUP BY D.NOME_DIPARTIMENTO, CB.NOME_CATEGORIA, BD.IMPORTO_APPROVATO
ORDER BY D.NOME_DIPARTIMENTO, CB.NOME_CATEGORIA;

-- Query per analisi trend di budget
SELECT 
    D.NOME_DIPARTIMENTO,
    PB.ANNO,
    PB.NOME_PERIODO,
    SUM(BD.IMPORTO_APPROVATO) AS BUDGET_APPROVATO,
    SUM(BD.IMPORTO_UTILIZZATO) AS BUDGET_UTILIZZATO,
    CASE 
        WHEN SUM(BD.IMPORTO_APPROVATO) = 0 THEN NULL
        ELSE (SUM(BD.IMPORTO_UTILIZZATO) / SUM(BD.IMPORTO_APPROVATO)) * 100 
    END AS PERCENTUALE_UTILIZZO
FROM BUDGET_DIPARTIMENTO BD
JOIN DIPARTIMENTI D ON BD.ID_DIPARTIMENTO = D.ID_DIPARTIMENTO
JOIN PERIODI_BUDGET PB ON BD.ID_PERIODO = PB.ID_PERIODO
WHERE D.ID_DIPARTIMENTO = :HV-ID-DIPARTIMENTO
AND PB.ANNO BETWEEN :HV-ANNO-INIZIO AND :HV-ANNO-FINE
GROUP BY D.NOME_DIPARTIMENTO, PB.ANNO, PB.NOME_PERIODO
ORDER BY PB.ANNO, PB.NOME_PERIODO;